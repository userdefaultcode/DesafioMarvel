{"ast":null,"code":"var _jsxFileName = \"/home/ghost/\\xC1rea de Trabalho/Estudo React/marvel-app/src/componets/Button.js\";\nimport React from \"react\";\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLE = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLE.includes(buttonStyle) ? buttonStyle : STYLE[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: 'btn ${checkButtonStyle} ${checkButtonSize}',\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/ghost/Área de Trabalho/Estudo React/marvel-app/src/componets/Button.js"],"names":["React","STYLE","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAGA,MAAMC,KAAK,GAAG,CACV,cADU,EAEV,cAFU,CAAd;AAIA,MAAMC,KAAK,GAAG,CACV,aADU,EAEV,YAFU,CAAd;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMhB;AACF,QAAMC,gBAAgB,GAAGR,KAAK,CAACS,QAAN,CAAeH,WAAf,IAA8BA,WAA9B,GAA4CN,KAAK,CAAC,CAAD,CAA1E;AAEA,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAE,4CAAnB;AAAiE,IAAA,OAAO,EAAEI,OAA1E;AAAmF,IAAA,IAAI,EAAED,IAAzF;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;KAAMD,M","sourcesContent":["import React from \"react\"\nimport './Button.css'\n\n\nconst STYLE = [ \n    'btn--primary',\n    'btn--outline'\n]\nconst SIZES = [\n    'btn--medium',\n    'btn--large'\n]\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n}) => {\n    const checkButtonStyle = STYLE.includes(buttonStyle) ? buttonStyle : STYLE[0]\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n    return(\n        <button className={'btn ${checkButtonStyle} ${checkButtonSize}'} onClick={onClick} type={type}>\n            {children}\n        </button>\n    )\n}"]},"metadata":{},"sourceType":"module"}